---
name: E2E Tests

on:
  pull_request:
    types:
      - opened
      - reopened
      - synchronize
    paths-ignore:
      - .circlecli/**
      - meta/**
      - .gitignore
      - .markdownlint.yml
      - .yamllint
      - ansible.cfg.galaxy
      - CHANGELOG.md
      - LICENSE
      - poetry.lock
      - pyproject.toml
      - README.md
      - Vagrantfile
  push:
    branches:
      - master
  schedule:
    - cron: "0 1 * * *"
  workflow_dispatch:

env:
  PY_COLORS: true
  ANSIBLE_FORCE_COLOR: true
  MOLECULE_DEBUG: false
  MOLECULE_VERBOSITY: 0
  MOLECULE_NO_LOG: true

concurrency:
  group: e2e
  cancel-in-progress: false

jobs:
  python36:
    runs-on: ubuntu-20.04
    strategy:
      max-parallel: 1
      fail-fast: false
      matrix:
        python:
          - version: 3.6
            ansible-core: 2.11.12
            molecule: 3.6.1
            molecule-docker: 1.1.0
        scenario:
          - name: python36
        st2_repo:
          - name: stable
          - name: unstable

    steps:
      - name: Checkout the repository
        uses: actions/checkout@v3

      - name: Set up Python ${{ matrix.python.version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python.version }}

      - name: Install Python dependencies
        run: |
          python3 -m pip install --upgrade pip
          python3 -m pip install --upgrade ansible-core==${{ matrix.python.ansible-core }}
          python3 -m pip install --upgrade molecule==${{ matrix.python.molecule }}
          python3 -m pip install --upgrade molecule-docker==${{ matrix.python.molecule-docker }}
          ansible-galaxy collection install --requirements-file requirements.yml

      - name: Molecule test ${{ matrix.st2_repo.name }} under ${{ matrix.scenario.name }}
        run: |
          molecule test --scenario-name ${{ matrix.scenario.name }}
        env:
          HUBOT_SLACK_TOKEN: ${{ secrets.HUBOT_SLACK_TOKEN }}
          ST2_REPO: ${{ matrix.st2_repo.name }}

  python38:
    runs-on: ubuntu-20.04
    needs: [python36]
    strategy:
      max-parallel: 1
      fail-fast: false
      matrix:
        python:
          - version: 3.8
            ansible-core: 2.13.7
            molecule: 4.0.4
            molecule-docker: 2.0.0
        scenario:
          - name: python38
        st2_repo:
          - stable
          - unstable

    steps:
      - name: Checkout the repository
        uses: actions/checkout@v3

      - name: Set up Python ${{ matrix.python.version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python.version }}

      - name: Install Python dependencies
        run: |
          python3 -m pip install --upgrade pip
          python3 -m pip install --upgrade ansible-core==${{ matrix.python.ansible-core }}
          python3 -m pip install --upgrade molecule==${{ matrix.python.molecule }}
          python3 -m pip install --upgrade molecule-docker==${{ matrix.python.molecule-docker }}
          ansible-galaxy collection install --requirements-file requirements.yml

      - name: Molecule test StackStorm ${{ matrix.st2_repo.name }} under ${{ matrix.scenario.name }}
        run: |
          molecule test --scenario-name ${{ matrix.scenario.name }}
        env:
          HUBOT_SLACK_TOKEN: ${{ secrets.HUBOT_SLACK_TOKEN }}
          ST2_REPO: ${{ matrix.st2_repo.name }}

  slack-notification:
    name: Slack notification for failed master builds
    if: always()
    needs: [python38]
    runs-on: ubuntu-20.04
    steps:
      - name: Workflow conclusion
        # this step creates an environment variable WORKFLOW_CONCLUSION and is the most reliable way to check the status of previous jobs
        uses: technote-space/workflow-conclusion-action@v3
      - name: CI Run Failure Slack Notification
        if: ${{ env.WORKFLOW_CONCLUSION == 'failure' && github.ref == 'refs/heads/master' }}
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
        uses: voxmedia/github-action-slack-notify-build@v1
        with:
          channel: ansible
          status: FAILED
          color: danger
